<style lang="less">
  page{
    height: 100%;
  }
  .container{
    background-color: #f5f5f9;
    justify-content: initial;
  }
  .form-box{
    width:100%;
    background-color: #fff;
    margin-top: 20rpx;
  }
  .row-wrap{
    width: 720rpx;
    height: 88rpx;
    line-height: 88rpx;
    margin-left: 30rpx;
    border-bottom: 1rpx solid #eee;
    display: flex;
    font-size: 28rpx;
    /*justify-content: space-between;*/
  }
  .row-wrap .label{
    width: 160rpx;
    color: #000
  }
  .row-wrap .label-right{
    flex: 1;
    height: 88rpx;
    line-height: 88rpx;
  }
  .row-wrap .label-right input{
    height: 100%;
    font-size: 28rpx;
    padding-right: 30rpx;
  }
  .row-wrap .right-box{
    margin-right: 30rpx;
  }
  .arrow-right{
    width: 15rpx;
    height: 24rpx;
  }
  .save-btn,
  .cancel-btn{
    width: 690rpx;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    margin-top:30rpx;
    border-radius: 6rpx;
    box-sizing: border-box;
  }
  .save-btn{
    background-color: #e64340;
    color:#fff;
  }
  button[type="default"]{
    background-color: #ffffff;
    color:#000;
  }
  .addr-details{
    height: auto;
    padding: 30rpx 0;
    margin-left:30rpx;
    border-bottom: 1rpx solid #eee;
    display: flex;
    font-size: 28rpx;
  }
  .addr-details .label{
    margin:auto 0 auto 0;
    width: 160rpx;
    color: #000
  }
  .addr-details textarea{
    box-sizing: border-box;
    width: 480rpx;
    overflow: scroll;
  }
  picker {
    min-width: 20rpx;
    height: 100%;
    margin-right: 20rpx;
  }
  .hui{
    color: #777;
  }
</style>
<template>
  <view class="container">
    <form bindsubmit="bindSave">
    <view class="form-box">
      <view class="row-wrap">
        <view class="label">联系人</view>
        <view class="label-right">
          <input name="name" class="input" type="text" placeholder="姓名" value=""/>
        </view>
      </view>

      <view class="row-wrap">
        <view class="label">手机号码</view>
        <view class="label-right">
            <input name="phone" class="input" maxlength="11" type="number" placeholder="11位手机号码" value=""/>
        </view>
      </view>

      <view class="row-wrap" bindtap="selectCity">
          <view class="label">选择地区</view>
          <picker bindchange="bindPickerProvinceChange" range="{{ provinces }}">
            <view class="picker {{ selProvince === '请选择' ? 'hui' : '' }}">
              {{ selProvince }}
            </view>
          </picker>
          <picker bindchange="bindPickerCityChange" range="{{ citys }}">
            <view class="picker {{ selCity === '请选择' ? 'hui' : '' }}">
              {{ selCity }}
            </view>
          </picker>
          <picker bindchange="bindPickerChange" range="{{ districts }}">
            <view class="picker {{ selDistrict === '请选择' ? 'hui' : '' }}">
              {{ selDistrict }}
            </view>
          </picker>
      </view>

      <view class="addr-details">
        <view class="label">详细地址</view>
        <view class="label-right">
          <textarea name="address" auto-height placeholder="街道门牌信息"  value=""/>
        </view>
      </view>
    </view>
    <button type="warn" class="save-btn" formType="submit">保存</button>
    <button type="default" class="cancel-btn" bindtap="bindCancel">取消</button>
    </form>
  </view>
</template>

<script>
import wepy from 'wepy'
import city from '@/utils/city'
import api from '@/utils/api'

export default class Create extends wepy.page {
  config = {
    navigationBarTitleText: '新增地址',
    navigationBarBackgroundColor: '#fafafa'
  }

  data = {
    cityData: [],
    provinces: [],
    citys: [],
    districts: [],
    selProvince: '请选择',
    selCity: '请选择',
    selDistrict: '请选择',
    selProvinceIndex: 0,
    selCityIndex: 0,
    selDistrictIndex: 0
  }

  computed = {

  }

  methods = {
    // 选择省
    bindPickerProvinceChange(event) {
      let selIterm = this.cityData[event.detail.value]

      this.selProvince = selIterm.name
      this.selProvinceIndex = event.detail.value
      this.selCity = '请选择'
      this.selCityIndex = 0
      this.selDistrict = '请选择'
      this.selDistrictIndex = 0

      this.initCityData(2, selIterm)
    },
    // 选择市
    bindPickerCityChange(event) {
      let selIterm = this.cityData[this.selProvinceIndex].cityList[event.detail.value]

      this.selCity = selIterm.name
      this.selCityIndex = event.detail.value
      this.selDistrict = '请选择'
      this.selDistrictIndex = 0

      this.initCityData(3, selIterm)
    },
    // 选择区
    bindPickerChange(event) {
      let selIterm = this.cityData[this.selProvinceIndex].cityList[this.selCityIndex].districtList[event.detail.value]

      if (selIterm && selIterm.name && event.detail.value) {
        this.selDistrict = selIterm.name
        this.selDistrictIndex = event.detail.value
      }
    },
    // 取消
    bindCancel() {
      wepy.navigateBack()
    }
  }

  onLoad() {
    this.cityData = city.cityData
    this.initCityData(1)
  }

  onShow() {

  }

  // 省市区选择数据设置
  initCityData(level, obj) {
    if (level === 1) {
      let pinkArray = []
      for (let i = 0; i < this.cityData.length; i++) {
        pinkArray.push(this.cityData[i].name)
      }

      this.provinces = pinkArray
    } else if (level === 2) {
      let pinkArray = []
      let dataArray = obj.cityList
      for (let i = 0; i < dataArray.length; i++) {
        pinkArray.push(dataArray[i].name)
      }

      this.citys = pinkArray
    } else if (level === 3) {
      let pinkArray = []
      let dataArray = obj.districtList
      for (let i = 0; i < dataArray.length; i++) {
        pinkArray.push(dataArray[i].name)
      }

      this.districts = pinkArray
    }
  }

  // 新增地址保存（form 表单绑定提交的方法需要单独写在 methods 之外）
  async bindSave (e) {
    let name = e.detail.value.name
    let phone = e.detail.value.phone
    let address = e.detail.value.address

    if (name === '') {
      wepy.showModal({
        title: '提示',
        content: '请填写联系人姓名',
        showCancel: false
      })
      return
    }
    if (phone === '') {
      wepy.showModal({
        title: '提示',
        content: '请填写手机号码',
        showCancel: false
      })
      return
    }
    if (this.selProvince === '请选择' || this.selCity === '请选择') {
      wepy.showModal({
        title: '提示',
        content: '请选择地区',
        showCancel: false
      })
      return
    }

    if (address === '') {
      wepy.showModal({
        title: '提示',
        content: '请填写详细地址',
        showCancel: false
      })
      return
    }

    // 最后提交(保存)的数据
    let addressData = {}
    addressData['contact_name'] = name
    addressData['contact_phone'] = phone
    addressData['province'] = this.selProvince
    addressData['city'] = this.selCity
    addressData['district'] = this.selDistrict
    addressData['address'] = address

    // 提交数据
    let addressResponse = await api.authRequest({
      url: 'addresses',
      method: 'POST',
      data: addressData
    })

    if (addressResponse.statusCode === 200) {
      let addresses = addressResponse.data.data
      wepy.setStorageSync('addressInfo', addresses)
      wepy.navigateBack()
    } else {
      wepy.showModal({
        title: '提示',
        content: '新增地址失败！',
        showCancel: false
      })
    }
  }
}
</script>
